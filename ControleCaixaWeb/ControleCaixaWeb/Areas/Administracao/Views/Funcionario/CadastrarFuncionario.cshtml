@model ControleCaixaWeb.Models.CadastrarUsuario

@{
    ViewBag.Title = "Cadastrar Funcionário";
    Layout = "~/Areas/Administracao/Views/Shared/_Layout.cshtml";
}

<h2>Cadastrar Funcionário</h2>

@using (Html.BeginForm(new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
    <div class="control-group">
        <legend>Cadastrar Funcionário</legend>
       
        <div class="editor-label">
            @Html.LabelFor(model => model.Nome,"Nome:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Nome, new { @class ="input-xlarge"})<p>Nome Sobrenome</p>
            @Html.ValidationMessageFor(model => model.Nome)

        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email,"Email:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Email, new { @class = "input-xlarge" })<p>meuemail</p>
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Senha,"Senha:")
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Senha, new { @class = "input-xlarge" })<p>minha senha, com no mínimo seis caracteres e no máximo 25</p>
            @Html.ValidationMessageFor(model => model.Senha)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmeSenha,"Confirma Senha:")
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.ConfirmeSenha, new { @class = "input-xlarge" })
            @Html.ValidationMessageFor(model => model.ConfirmeSenha)
        </div>

          <div class="editor-label">
            @Html.LabelFor(model => model.Telefone,"Telefone:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Telefone, new { @class = "input-xlarge" })<p>32224567</p>
            @Html.ValidationMessageFor(model => model.Telefone)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EnderecoUsuario.NomeRua,"Endereco:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EnderecoUsuario.NomeRua, new { @class = "input-xlarge" })<p>Nome da rua, numero</p>
            @Html.ValidationMessageFor(model => model.EnderecoUsuario.NomeRua)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.EnderecoUsuario.Complemento,"Complemento:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EnderecoUsuario.Complemento, new { @class = "input-xlarge" })<p>Proximo a casa tal</p>
            @Html.ValidationMessageFor(model => model.EnderecoUsuario.Complemento)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.EnderecoUsuario.CEP,"CEP:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EnderecoUsuario.CEP, new { @class = "input-xlarge" ,size=8})<p>58015876</p>
            @Html.ValidationMessageFor(model => model.EnderecoUsuario.CEP)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.EnderecoUsuario.Bairro,"Bairro:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EnderecoUsuario.Bairro, new { @class = "input-xlarge" })<p>Nome do Bairro</p>
            @Html.ValidationMessageFor(model => model.EnderecoUsuario.Bairro)
        </div>
         <div class="editor-label">
            @Html.LabelFor(model => model.EnderecoUsuario.Cidade,"Cidade:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EnderecoUsuario.Cidade, new { @class = "input-xlarge" })<p>Nome da Cidade</p>
            @Html.ValidationMessageFor(model => model.EnderecoUsuario.Cidade)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.EnderecoUsuario.Estado,"Estado:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EnderecoUsuario.Estado, new { @class = "input-xlarge" })<p>Nome do Estado</p>
            @Html.ValidationMessageFor(model => model.EnderecoUsuario.Estado)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.EstabelecimentoTrabalho, "Estabelecimento:")
        </div>

          <div class="editor-field">
            @Html.DropDownListFor(model => model.EstabelecimentoTrabalho.Codigo, (IEnumerable<SelectListItem>)ViewBag.Estabelecimento, "Selecione Estabelecimento")@Html.ActionLink("Adicionar Estabelecimento", "CadastrarEstabelecimento", "Estabelecimento")
            @Html.ValidationMessageFor(model => model.EstabelecimentoTrabalho)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NomeFuncao, "Função:")
        </div>

          <div class="editor-field">
            @Html.DropDownListFor(model => model.NomeFuncao.Codigo, (IEnumerable<SelectListItem>)ViewBag.Papel, "Selecione Funcao")
            @Html.ValidationMessageFor(model => model.NomeFuncao)
        </div>

           <div class="editor-label">
            @Html.LabelFor(model => model.Privilegiado,"Tem Previlégios?:")
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Privilegiado)<p>Sim/Não</p>
            @Html.ValidationMessageFor(model => model.Privilegiado)
        </div>



        <p>
              <input class ="btn btn-success" type="submit" value="Cadastar" />
            <input class="btn btn-warning" type="reset" value="Limpar" />
        </p>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Página Inicial", "Index","Home")
</div>
